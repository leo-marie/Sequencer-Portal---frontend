{"version":3,"sources":["components/Switch.js","components/Groovebox.js","App.js","index.js"],"names":["Switch","PlayStopButton","props","useState","clicked","setClicked","backgroundColor","setBackgroundColor","useEffect","isOn","step","currentStep","audio","Audio","src","instrument","id","volume","play","style","className","onClick","e","handleSequenceChange","letter","datatekno","datadub","datajungle","moodArray","ins01Array","ins02Array","ins03Array","ins04Array","ins05Array","ins06Array","ins07Array","ins08Array","createDataArray","data","i","push","Groovebox","React","forwardRef","ref","setIsOn","setCurrentStep","bpm","setBpm","display","setDisplay","ins01","ins02","ins03","ins04","ins05","ins06","ins07","ins08","setVolume","mood","setMood","dataArray","setDataArray","sequence","setSequence","useImperativeHandle","getSequence","toString","timer","setTimeout","clearTimeout","startStop","document","documentElement","setProperty","console","log","handleBpmChange","event","target","value","handleVolumeChange","name","prevState","parseFloat","s","instIndex","parseInt","slice","newArr","for","type","min","max","onInput","onChange","indexOf","length","fontSize","saveSequence","map","d","key","App","currentAccount","setCurrentAccount","allSequences","setAllSequences","myRef","useRef","inputSequence","setInputSequence","contractAddress","contractABI","abi","getAllSequences","a","async","window","ethereum","provider","ethers","providers","Web3Provider","signer","getSigner","sequencerPortalContract","Contract","sequences","sequencesCleaned","seq","musician","timestamp","Date","onNewSequence","from","on","off","request","method","accounts","account","checkIfWalletIsConnected","alert","getTotalSequences","count","toNumber","sequenceToSave","current","gasLimit","saveSequenceTxn","hash","wait","index","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.576ab352.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport './Groovebox.css';\n\n// Child\n// Parent : Groovebox\nfunction Switch(props) {\n\n// -----   HOOKS   -----\n\nconst [clicked, setClicked] = useState(false);\nconst [backgroundColor, setBackgroundColor] = useState(\"var(--color2)\");\n\n// play audio and background color\nuseEffect(() => {\nif(props.isOn) {\n    if(props.step == props.currentStep && clicked) {\n        setBackgroundColor('var(--color3)');\n        var audio = new Audio(props.src);\n        let instrument = props.id;\n        audio.volume = props.volume[instrument];\n        audio.play();\n    } else if(props.step != props.currentStep && clicked) {\n        setBackgroundColor('var(--color4)')\n    } else if(props.step == props.currentStep && !clicked) {\n        setBackgroundColor(\"var(--color5)\")\n    } else {setBackgroundColor('var(--color2)') }\n} else if(!props.isOn) {\n    if(clicked) {setBackgroundColor('var(--color4)')\n    } else {setBackgroundColor('var(--color2)')}\n}\n}, [props.currentStep, clicked, props.isOn]);\n\n\n//   -----   METHODS   -----\n\n\nconst handleClick = () => {\n    if(clicked) {\n        setClicked(false);\n\n    } else {\n        setClicked(true);\n    }\n}\n\n\n//   -----   RETURN   -----\n\n  return (\n\n// We just create 1 model of switch and define its properties, we create the grid and pass value through parent\n<div style={{backgroundColor: backgroundColor}} className=\"switch\" id={props.id} step={props.step} onClick={(e) => {\n    handleClick(); \n    props.handleSequenceChange(e, props.step);\n    }}>\n    {props.step+1}\n    <audio src={props.src} className=\"clip\" id={props.letter}></audio>\n</div>\n) // return\n} // Switch\n\nexport default Switch;","import React from 'react';\nimport { useState, useEffect, useRef, useImperativeHandle } from \"react\";\nimport Switch from './Switch';\nimport './Groovebox.css';\nimport { FaPlay } from \"react-icons/fa\";\nimport { FaStop } from \"react-icons/fa\";\nimport { FaCaretUp } from \"react-icons/fa\";\nimport { FaCaretDown } from \"react-icons/fa\";\n\n\nconst datatekno = [\n  { id: 'ins01', letter: 'Q', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno01.mp3' },\n  { id: 'ins02', letter: 'W', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno02.mp3' },\n  { id: 'ins03', letter: 'E', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno03.mp3' },\n  { id: 'ins04', letter: 'A', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno04.mp3' },\n  { id: 'ins05', letter: 'S', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno05.mp3' },\n  { id: 'ins06', letter: 'D', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno06.mp3' },\n  { id: 'ins07', letter: 'Z', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno07.mp3' },\n  { id: 'ins08', letter: 'X', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/tekno08.mp3' }];\n\n\nconst datadub = [\n  { id: 'ins01', letter: 'Q', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub01.mp3' },\n  { id: 'ins02', letter: 'W', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub02.mp3' },\n  { id: 'ins03', letter: 'E', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub03.mp3' },\n  { id: 'ins04', letter: 'A', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub04.mp3' },\n  { id: 'ins05', letter: 'S', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub05.mp3' },\n  { id: 'ins06', letter: 'D', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub06.mp3' },\n  { id: 'ins07', letter: 'Z', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub07.mp3' },\n  { id: 'ins08', letter: 'X', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/dub08.mp3' }];\n\nconst datajungle = [\n  { id: 'ins01', letter: 'Q', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle01.mp3' },\n  { id: 'ins02', letter: 'W', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle02.mp3' },\n  { id: 'ins03', letter: 'E', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle03.mp3' },\n  { id: 'ins04', letter: 'A', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle04.mp3' },\n  { id: 'ins05', letter: 'S', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle05.mp3' },\n  { id: 'ins06', letter: 'D', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle06.mp3' },\n  { id: 'ins07', letter: 'Z', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle07.mp3' },\n  { id: 'ins08', letter: 'X', src: 'https://raw.githubusercontent.com/leo-marie/Sequencer-Portal---frontend/main/public/samples/jungle08.mp3' }];\n\n\nconst moodArray = [\"tekno\", \"dub\", \"jungle\"];\n\n\n// create one array for each instrument\nlet ins01Array = [];\nlet ins02Array = [];\nlet ins03Array = [];\nlet ins04Array = [];\nlet ins05Array = [];\nlet ins06Array = [];\nlet ins07Array = [];\nlet ins08Array = []; \n\n// fill arrays so we can map them\nconst createDataArray = (data) => {\n  ins01Array = [];\n  ins02Array = [];\n  ins03Array = [];\n  ins04Array = [];\n  ins05Array = [];\n  ins06Array = [];\n  ins07Array = [];\n  ins08Array = []; \n\n  // fill the insArrays\n  for(let i=0; i<16; i++) {\n    ins01Array.push({\n      id: data[0].id,\n      letter: data[0].letter,\n      src: data[0].src,\n      step: i\n    })\n    ins02Array.push({\n      id: data[1].id,\n      letter: data[1].letter,\n      src: data[1].src,\n      step: i\n    })\n    ins03Array.push({\n      id: data[2].id,\n      letter: data[2].letter,\n      src: data[2].src,\n      step: i\n    })\n    ins04Array.push({\n      id: data[3].id,\n      letter: data[3].letter,\n      src: data[3].src,\n      step: i\n    })\n    ins05Array.push({\n      id: data[4].id,\n      letter: data[4].letter,\n      src: data[4].src,\n      step: i\n    })\n    ins06Array.push({\n      id: data[5].id,\n      letter: data[5].letter,\n      src: data[5].src,\n      step: i\n    })\n    ins07Array.push({\n      id: data[6].id,\n      letter: data[6].letter,\n      src: data[6].src,\n      step: i\n    })\n    ins08Array.push({\n      id: data[7].id,\n      letter: data[7].letter,\n      src: data[7].src,\n      step: i\n    })\n  }\n  return [ins01Array, ins02Array, ins03Array, ins04Array, ins05Array, ins06Array, ins07Array, ins08Array];\n}\n\n\nlet PlayStopButton;\n\nconst emptySequence = \"0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\";\n\n// Parent\n// Children : Switch\nconst Groovebox = React.forwardRef((props, ref) => {\n\n// -----   HOOKS   -----\n\nconst [isOn, setIsOn] = useState(false);\nconst [currentStep, setCurrentStep] = useState(0);\nconst [bpm, setBpm] = useState(120);\nconst [display, setDisplay] = useState(\"click to start\");\nconst [volume, setVolume] = useState({\n  ins01: 1,\n  ins02: 1,\n  ins03: 1,\n  ins04: 1,\n  ins05: 1,\n  ins06: 1,\n  ins07: 1,\n  ins08: 1\n});\nconst [mood, setMood] = useState(\"dub\");\nconst [dataArray, setDataArray] = useState(createDataArray(datadub));\nconst [sequence, setSequence] = useState([\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n]);\n\nconst [savedSequence, setSavedSequence] = useState(\"\");\n useImperativeHandle(ref, () => ({getSequence: () => {return sequence.toString()}}), [sequence]);\n// No array because doesn t rerender + easier to store on blockchain\n/*\nconst [savedSequence, setSavedSequence] = useState({\n  tekno: emptySequence,\n  dub: emptySequence,\n  jungle: emptySequence\n});\n*/\n\n\n// -----   USE EFFECT   -----\n\n// the loop\nuseEffect(() => {\n  const timer = setTimeout(() => {\n    if (isOn == true) {\n      setCurrentStep((currentStep + 1) % 16);\n    }\n  }, 60000/bpm);\n  return () => {\n    clearTimeout(timer);\n  };\n}, [currentStep, isOn, bpm]);\n\n// reset when stop\nuseEffect(() => {\n  if (!isOn) {setCurrentStep(0)}\n}, [isOn])\n\nuseEffect(() => {\n  if (isOn) {setDisplay(currentStep+1)}\n  else {setDisplay(\"Click to Start !\")}\n}, [isOn, currentStep])\n\nuseEffect(() => {\n  if (!isOn) {PlayStopButton = <FaPlay onClick={startStop} className=\"icon\" /> }\n  else {PlayStopButton = <FaStop onClick={startStop} className=\"icon\" /> }\n}, [isOn])\n\n\nuseEffect(() => {\n  if(mood == \"tekno\") {\n    setDataArray(createDataArray(datatekno))\n  } else if(mood == \"dub\") {\n    setDataArray(createDataArray(datadub))\n  } else if(mood == \"jungle\") {\n    setDataArray(createDataArray(datajungle))\n  }\n}, [mood] )\n\n// themes\nuseEffect(() => {\n  if(mood == \"tekno\") {\n    document.documentElement.style.setProperty('--color1', '#000000');\n    document.documentElement.style.setProperty('--color2', '#323232');\n    document.documentElement.style.setProperty('--color3', '#FF1E56');\n    document.documentElement.style.setProperty('--color4', '#FFAC41');\n    document.documentElement.style.setProperty('--color5', '#575757');\n  } else if(mood == \"dub\") {\n    document.documentElement.style.setProperty('--color1', '#000000');\n    document.documentElement.style.setProperty('--color2', '#123e01');\n    document.documentElement.style.setProperty('--color3', '#fae409');\n    document.documentElement.style.setProperty('--color4', '#d4291d');\n    document.documentElement.style.setProperty('--color5', '#185302');\n  } else if(mood == \"jungle\") {\n    document.documentElement.style.setProperty('--color1', '#000000');\n    document.documentElement.style.setProperty('--color2', '#0a2b1b');\n    document.documentElement.style.setProperty('--color3', '#8f9b45');\n    document.documentElement.style.setProperty('--color4', '#dfd97f');\n    document.documentElement.style.setProperty('--color5', '#445f38');\n  }\n}, [mood] )\n\n// -----   SET STATE METHODS   -----\n\n// Set isOn\nconst startStop = () => {\n  if(isOn) {\n    setIsOn(false)\n  } else {setIsOn(true)}\n  console.log(volume)\n}\n\n// Set BPM\nconst handleBpmChange = (event) => {\n  setBpm(event.target.value)\n}\n\n// Set Volumes\nconst handleVolumeChange = e => {\n  const { name, value } = e.target;\n  setVolume(prevState => ({\n      ...prevState,\n      [name]: parseFloat(value)\n  }));\n};\n\n// Set Mood\nconst handleIncrementMood = () => {\n  if(moodArray.indexOf(mood) < moodArray.length - 1) {\n    setMood(moodArray[moodArray.indexOf(mood) + 1])\n  } else {\n    setMood(moodArray[0])\n  }\n}\nconst handleDecrementMood = () => {\n  if(moodArray.indexOf(mood) > 0) {\n    setMood(moodArray[moodArray.indexOf(mood) - 1])\n  } else {\n    setMood(moodArray[moodArray.length - 1])\n  }\n}\n\n// Set Sequence\nconst handleSequenceChange = (e, s) => {\n  const id = e.target.id;\n  const step = s;\n  const instIndex = parseInt(id.slice(-1)-1);\n  let newArr = [...sequence];\n  if(newArr[instIndex][step] == 0) {\n    newArr[instIndex][step] = 1;\n  } \n  else if(newArr[instIndex][step] == 1) {\n    newArr[instIndex][step] = 0;\n  }\n  setSequence(newArr);\n}\n\n/*\nconst handleSequenceSave = () => {\n  var actualSequence = sequence.concat();\n  var sequenceToSave = { ...savedSequence}\n    sequenceToSave = actualSequence.toString();\n    setSavedSequence(sequenceToSave);\n}\n*/\n\n/*\nconst handleSequenceSave = () => {\n  var actualSequence = sequence.concat();\n  var sequenceToSave = { ...savedSequence}\n  if(mood == \"tekno\") {\n    sequenceToSave.tekno = actualSequence.toString();\n    setSavedSequence(sequenceToSave);\n  } else if(mood == \"dub\") {\n    sequenceToSave.dub = actualSequence.toString();\n    setSavedSequence(sequenceToSave);\n  } else if(mood == \"jungle\") {\n    sequenceToSave.jungle = actualSequence.toString();\n    setSavedSequence(sequenceToSave);\n  }\n}\n*/\n/*\n  console.log(\"mood    \" + mood)\n  console.log(\"empty sequence    \" + emptySequence)\n  console.log(\"saved Sequence    \" + savedSequence)\n  console.log(\"saved Tekno Sequence    \" + savedSequence.tekno)\n  console.log(\"saved Dub Sequence    \" + savedSequence.dub)\n  console.log(\"saved Jungle Sequence    \" + savedSequence.jungle)\n  console.log(\"saved Sequence    \" + savedSequence)\n  console.log(\"actual Sequence   \" + actualSequence)\n  console.log(\"Sequence    \" + sequence)\n}\n*/\n\n// -----   SUB METHODS   -----\n\n// convert back a sequence string to an array of arrays, will help with Smart Contract\nconst deparseSequence = (sequence) => {\n  var fullArray = sequence.split(\",\");\n  for (let a in fullArray ) {\n      fullArray[a] = parseInt(fullArray[a], 10);\n  }\n  let array1 = fullArray.slice(0, 8);\n  let array2 = fullArray.slice(8, 16);\n  let array3 = fullArray.slice(16, 24);\n  let array4 = fullArray.slice(24, 32);\n  let array5 = fullArray.slice(32, 40);\n  let array6 = fullArray.slice(40, 48);\n  let array7 = fullArray.slice(48, 56);\nlet finalArray = [array1, array2, array3, array4, array5, array6, array7];\nreturn finalArray;\n}\n\n\n// -----   RETURN   -----\n\n\nreturn (\n<div id=\"groove-box\">\n  <div id=\"startstop\">\n    {PlayStopButton}\n  </div>\n  <form id=\"bpm\">\n    <label for=\"points\">BPM</label>\n    <input type=\"range\" id=\"points\" name=\"points\" min=\"120\" max=\"1000\" className=\"slider\" onInput={handleBpmChange} onChange={handleBpmChange}></input>\n  </form>\n  <div id=\"displaywrapper\">\n    <div id=\"display\">\n      {mood} - {display}\n    </div>\n    <div id=\"bankbutton\">\n      <FaCaretUp className=\"icon\" onClick={handleIncrementMood} />\n      <div style={{fontSize:'0.5em'}}>Bank</div>\n      <FaCaretDown className=\"icon\" onClick={handleDecrementMood} />\n    </div>\n  </div>\n  <button id=\"savebutton\" onClick={props.saveSequence}>Save</button>\n  <div id=\"switches\" className=\"switchesandvolume\">\n    <div className=\"gridrow\">\n      {dataArray[0].map((d) =>\n      <Switch \n      key={d.id + d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Kick</label>\n        <input type=\"range\" name=\"ins01\" id=\"ins01Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n    \n    <div className=\"gridrow\">\n      {dataArray[1].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Snare</label>\n        <input type=\"range\" name=\"ins02\" id=\"ins02Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n\n    <div className=\"gridrow\">\n      {dataArray[2].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Closed Hat</label>\n        <input type=\"range\" name=\"ins03\" id=\"ins03Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n    <div className=\"gridrow\">\n      {dataArray[3].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Rim</label>\n        <input type=\"range\" name=\"ins04\" id=\"ins04Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n    <div className=\"gridrow\">\n      {dataArray[4].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Woodblock</label>\n        <input type=\"range\" name=\"ins05\" id=\"ins05Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n    <div className=\"gridrow\">\n      {dataArray[5].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Guitar</label>\n        <input type=\"range\" name=\"ins06\" id=\"ins06Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n    <div className=\"gridrow\">\n      {dataArray[6].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Synare</label>\n        <input type=\"range\" name=\"ins07\" id=\"ins07Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n    <div className=\"gridrow\">\n      {dataArray[7].map((d) =>\n      <Switch \n      key={d.id+ d.step} src={d.src} letter={d.letter} id={d.id} step={d.step} currentStep={currentStep} isOn={isOn} volume={volume} handleSequenceChange={handleSequenceChange} />\n      )}\n      <form className=\"volume\">\n        <label for=\"points\">Crash</label>\n        <input type=\"range\" name=\"ins08\" id=\"ins08Volume\" min=\"0\" max=\"1\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\n      </form>\n    </div>\n  </div>\n</div>\n  );\n})\n\nexport default Groovebox;","import React, { useEffect, useState, useRef, useImperativeHandle } from \"react\";\r\nimport './App.css';\r\nimport { ethers } from \"ethers\";\r\nimport abi from './utils/SequencerPortal.json';\r\nimport Groovebox from './components/Groovebox';\r\n\r\nconst App = () => {\r\n/*\r\n* Just a state variable we use to store our user's public wallet.\r\n*/\r\nconst [currentAccount, setCurrentAccount] = useState(\"\");\r\nconst [allSequences, setAllSequences] = useState([]);\r\nconst myRef = useRef();\r\nconst [inputSequence, setInputSequence] = useState(\"\");\r\n/**\r\n * Create a variable here that holds the contract address after you deploy!\r\n */\r\nconst contractAddress = \"0xCF9Eda81e57C430ae3e2F0172bD197bFfd1Ded7E\";\r\n/**\r\n * Create a variable here that references the abi content!\r\n */\r\nconst contractABI = abi.abi;\r\n\r\nconst checkIfWalletIsConnected = async () => {\r\n  try {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      console.log(\"Make sure you have metamask!\");\r\n      return;\r\n    } else {\r\n      console.log(\"We have the ethereum object\", ethereum);\r\n    }\r\n    /*\r\n    * Check if we're authorized to access any of the account in the user's wallet\r\n    */\r\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\r\n    if (accounts.length !== 0) {\r\n      const account = accounts[0];\r\n      console.log(\"Found an authorized account:\", account);\r\n      setCurrentAccount(account);\r\n      getAllSequences();\r\n    } else {\r\n      console.log(\"No authorized account found\")\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n/**\r\n* Implement your connectWallet method here\r\n*/\r\nconst connectWallet = async () => {\r\n  try {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      alert(\"Get MetaMask!\");\r\n      return;\r\n    }\r\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\r\n    console.log(\"Connected\", accounts[0]);\r\n    setCurrentAccount(accounts[0]); \r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n} // connect wallet\r\n\r\nconst saveSequence = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum); // providers is Metamask node\r\n        const signer = provider.getSigner();\r\n        const sequencerPortalContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n        let count = await sequencerPortalContract.getTotalSequences();\r\n        console.log(\"Retrieved total sequence count...\", count.toNumber());\r\n        /*\r\n        * Execute the actual saveSequence from your smart contract\r\n        */\r\n\r\n        const sequenceToSave = myRef.current.getSequence(); // here\r\n        const saveSequenceTxn = await sequencerPortalContract.saveSequence(sequenceToSave, { gasLimit: 3000000 }); // here\r\n        console.log(\"Mining...\", saveSequenceTxn.hash);\r\n\r\n        await saveSequenceTxn.wait();\r\n        console.log(\"Mined -- \", saveSequenceTxn.hash);\r\n\r\n        count = await sequencerPortalContract.getTotalSequences();\r\n        console.log(\"Retrieved total sequence count...\", count.toNumber());\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n}\r\n\r\n  /*\r\n   * Create a method that gets all waves from your contract\r\n   */\r\nconst getAllSequences = async () => {\r\n  try {\r\n    const { ethereum } = window;\r\n    if (ethereum) {\r\n      const provider = new ethers.providers.Web3Provider(ethereum);\r\n      const signer = provider.getSigner();\r\n      const sequencerPortalContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n      /*\r\n      * Call the getAllSequences method from Smart Contract\r\n      */\r\n      const sequences = await sequencerPortalContract.getAllSequences();\r\n      /*\r\n      * We only need address, timestamp, and sequence in our UI so let's\r\n      * pick those out\r\n      */\r\n      const sequencesCleaned = sequences.map(seq => {\r\n        return {\r\n          musician: seq.musician,\r\n          timestamp: new Date(seq.timestamp * 1000),\r\n          sequence: seq.sequence,\r\n        };\r\n      });\r\n      /*\r\n      * Store our data in React State\r\n      */\r\n      setAllSequences(sequencesCleaned);\r\n    } else {\r\n      console.log(\"Ethereum object doesn't exist!\")\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}; // getAllSequences\r\n/**\r\n * Listen in for emitter events!\r\n */\r\nuseEffect(() => {\r\n  let sequencerPortalContract;\r\n\r\n  const onNewSequence = (from, timestamp, seq) => {\r\n    console.log('NewSequence', from, timestamp, seq);\r\n    setAllSequences(prevState => [ // so it re-render\r\n      ...prevState,\r\n      {\r\n        musician: from,\r\n        timestamp: new Date(timestamp * 1000),\r\n        sequence: seq,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  if (window.ethereum) {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    const signer = provider.getSigner();\r\n\r\n    sequencerPortalContract = new ethers.Contract(contractAddress, contractABI, signer);\r\n    sequencerPortalContract.on('NewSequence', onNewSequence);\r\n  }\r\n\r\n  return () => {\r\n    if (sequencerPortalContract) {\r\n      sequencerPortalContract.off('NewSequence', onNewSequence);\r\n    }\r\n  };\r\n}, []); // useEffect\r\n/*\r\n* This runs our function when the page loads.\r\n*/\r\nuseEffect(() => {\r\n  checkIfWalletIsConnected();\r\n}, [])\r\n  \r\nreturn (\r\n  <div className=\"mainContainer\">\r\n    <div className=\"dataContainer\">\r\n      <div className=\"header\">\r\n      Blockchain fueled Sequence Saver\r\n      </div>\r\n      <div className=\"bio\">\r\n      Save your sequence on the Rinkeby Testnet. You have 50% chance to win some (fake) ETH !\r\n      </div>\r\n      {/*\r\n      * If there is no currentAccount render this button\r\n      */}\r\n      {!currentAccount && (\r\n      <button id=\"connectbutton\" onClick={connectWallet}>\r\n        Connect Wallet\r\n      </button>\r\n      )}\r\n      <div id=\"groovebox-container\">\r\n        <Groovebox ref={myRef} saveSequence={saveSequence} />\r\n      </div>\r\n      <input className=\"textinput\" value={inputSequence} onChange={e => setInputSequence(e.target.value)} />\r\n      \r\n      {allSequences.map((seq, index) => {\r\n          return (\r\n            <div key={index} className=\"sequenceCard\">\r\n              <div>Musician: {seq.musician}</div>\r\n              <div>Time: {seq.timestamp.toString()}</div>\r\n              <div>Sequence: {seq.sequence}</div>\r\n            </div>)\r\n        })}\r\n\r\n\r\n    </div>\r\n  </div>\r\n);\r\n} // App\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}